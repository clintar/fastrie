xptMiner changes:

b14 (2014-03-29)
	- Providing binaries linked against gmp6.  Tested and
	  validated.  Decent speedup for newer Intel CPUs.

	- Optimization for sieving to large numbers (-s #).
	  Works properly up to around 2^31-1, but to be safe, use at
          most 2.1 billion (-s 2100000000).  This optimization uses an
	  idea from a00k's miner - thank you!  If the offset of
	  a prime in the sieve is greater than the maximum amount the
	  sieve can be extended within the Riecoin nonce, it is discarded;
	  this helps save some space with large sieves and lets the miner
	  be more efficient when extending.

	- Note that super-large sieve values are not necessarily the
	  best.  Benchmark and evaluate for your own CPU.  In general,
	  higher difficulty calls for a larger -s, but doing so
	  increases the amount of memory used per thread and
	  increases the think-time at the start of every block.
	  A slower CPU or a lower-memory CPU wants a smaller -s
          value.  Some good values to try:
	     Small CPU:  200000000
             Default:    500000000
             Good CPU:   900000000
             Fast CPU:  1500000000
	
b13 (2014-03-23)
	- Calculate instead of guess the maxiter (it was set too high)
	  based upon the riecoin nonce limit, the primorial, and the
	  size of the sieve.
	- Switch target recomputation to every 3 minutes.
	
	- Minor code optimizations for initial sieve offset computation,
	  which now occupies a bit more CPU time than it did before because
	  of b12 changes to recompute target.

	- Continued internal code cleanup and clarification.
	
b12:
	- Re-generates target and nonce time every 60 seconds.
	  This may be too aggressive - I'm going to back it out a bit
	  in b13 and see if people continue to have the invalid share
	  problem.

b11:
	- Import reconnect-hang fix from clintar/xptMiner.

b10:
	- MAJOR CHANGE:  Update to the definition of a "share"
	  from a 4-chain of primes (first four all prime) to
	  "any four".  This change results in substantially more
	  shares per hour, but addresses fairness problems resulting
	  from targeting 4-chains vs 6-chains.

	  A consequence of this change is that 2ch/3ch/4ch numbers
	  are all increased and should not be compared vs previous 
	  versions.  No substantive changes to actual search process,
	  so blocks per hour should remain the same.
